unit Visao.RelatorioClientes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, cxGraphics,
  cxLookAndFeels, cxLookAndFeelPainters, Vcl.Menus, dxSkinsCore, dxSkinBlack,
  dxSkinBlue, dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom,
  dxSkinDarkSide, dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVS2010, dxSkinWhiteprint, dxSkinXmas2008Blue,
  System.Actions, Vcl.ActnList, Vcl.StdCtrls, cxButtons, System.ImageList,
  Vcl.ImgList, cxControls, cxStyles, dxSkinscxPCPainter, cxCustomData, cxFilter,
  cxData, cxDataStorage, cxEdit, cxNavigator, Data.DB, cxDBData, cxGridLevel,
  cxClasses, cxGridCustomView, cxGridCustomTableView, cxGridTableView,
  cxGridDBTableView, cxGrid, Data.Win.ADODB, Modelo.RelatorioClientes;

type
  TTipoAcaoBotoes = (taRetornar, taProcessar);
  TfrmPrincipal = class(TForm)
    pnlBotoes: TPanel;
    ImagensFormularios: TImageList;
    btnSair: TcxButton;
    ActionList1: TActionList;
    btnImprimir: TcxButton;
    btnProcessar: TcxButton;
    btnRetornar: TcxButton;
    ActionRetornar: TAction;
    ActionProcessar: TAction;
    ActionImprimir: TAction;
    ActionSair: TAction;
    pnlPrincipal: TPanel;
    cxGridClientesDBTableView1: TcxGridDBTableView;
    cxGridClientesLevel1: TcxGridLevel;
    cxGridClientes: TcxGrid;
    dsClientes: TDataSource;
    Label1: TLabel;
    edtCaminhoArquivo: TEdit;
    btnLocalizarArquivo: TButton;
    OpenDialog: TOpenDialog;
    cxGridClientesDBTableViewCODIGO_CLIENTE: TcxGridDBColumn;
    cxGridClientesDBTableViewRAZAO_SOCIAL: TcxGridDBColumn;
    cxGridClientesDBTableViewCNPJ: TcxGridDBColumn;
    cxGridClientesDBTableViewTELEFONE: TcxGridDBColumn;
    pnlLocalizarBanco: TPanel;
    cxGridClientesDBTableViewCEP: TcxGridDBColumn;
    procedure btnLocalizarArquivoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure ActionProcessarExecute(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ActionSairExecute(Sender: TObject);
    procedure ActionImprimirExecute(Sender: TObject);
  private
    FdmClientes: TdmRelatorioClientes;
    { Private declarations }
    procedure CarregarBanco;
    procedure ControleBotoes(const pTipoAcaoBotoes: TTipoAcaoBotoes);
    procedure SetdmClientes(const Value: TdmRelatorioClientes);
    property dmClientes: TdmRelatorioClientes read FdmClientes write SetdmClientes;
  public
    { Public declarations }
  end;
const
  EXTENSAO_ARQUIVO_XLS  = '.XLS';
  TABELA_ARQUIVO = 'Cliente$';

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.dfm}

procedure TfrmPrincipal.ActionImprimirExecute(Sender: TObject);
begin
  dmClientes.ImprimirRelatorioClientesSiedos;
end;

procedure TfrmPrincipal.ActionProcessarExecute(Sender: TObject);
begin
  CarregarBanco;
end;

procedure TfrmPrincipal.ActionSairExecute(Sender: TObject);
begin
  Close;
end;

procedure TfrmPrincipal.btnLocalizarArquivoClick(Sender: TObject);
begin
  OpenDialog.Filter := 'Arquivo do Excel|*.xls*|';
  if (OpenDialog.Execute) then
  begin
   if not (UpperCase(ExtractFileExt(OpenDialog.FileName)) = EXTENSAO_ARQUIVO_XLS) then
   begin
     raise Exception.Create('Arquivo Inválido.');
   end;
   edtCaminhoArquivo.Text := OpenDialog.FileName;
  end;
end;

procedure TfrmPrincipal.CarregarBanco;
begin
  if (Application.MessageBox('Deseja importar o arquivo Excel?', 'GestFarma', MB_YESNO + MB_ICONQUESTION) = mrYes) then
  begin
    if (FileExists(edtCaminhoArquivo.Text)) then
    begin
      try
        dsClientes.DataSet := dmClientes.CriarAdoDataSet(dmClientes.CriarAdoConnection(edtCaminhoArquivo.Text), TABELA_ARQUIVO);
      except

      end;
    end
    else
    begin
      Application.MessageBox('Arquivo não localizado!', 'GestFarma', MB_OK + MB_ICONWARNING);
    end;
  end;
end;

procedure TfrmPrincipal.ControleBotoes(const pTipoAcaoBotoes: TTipoAcaoBotoes);
begin
  if pTipoAcaoBotoes = taRetornar then
  begin
    dsClientes.DataSet.Close;
    btnImprimir.Enabled := False;
    btnProcessar.Enabled := True;
    btnSair.Enabled := True;
    btnRetornar.Enabled := False;
  end
  else
  begin
    btnImprimir.Enabled := True;
    btnProcessar.Enabled := False;
    btnSair.Enabled := False;
    btnRetornar.Enabled := True;
  end;
end;

procedure TfrmPrincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
end;

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  dmClientes := TdmRelatorioClientes.Create(nil);
end;

procedure TfrmPrincipal.FormDestroy(Sender: TObject);
begin
  dmClientes.Free;
end;

procedure TfrmPrincipal.SetdmClientes(const Value: TdmRelatorioClientes);
begin
  FdmClientes := Value;
end;

end.
